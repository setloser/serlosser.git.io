<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦舞银雪</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://setloser.github.io/"/>
  <updated>2018-12-23T16:54:06.788Z</updated>
  <id>http://setloser.github.io/</id>
  
  <author>
    <name>Alinx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>web学习计划</title>
    <link href="http://setloser.github.io/2018/12/24/web-pro/"/>
    <id>http://setloser.github.io/2018/12/24/web-pro/</id>
    <published>2018-12-23T16:45:41.000Z</published>
    <updated>2018-12-23T16:54:06.788Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h3><ul><li>css3</li><li>html5</li><li>JavaScript</li><li>jQuery</li><li>ajax</li><li>json<a id="more"></a><h3 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h3></li><li>bootstrap</li><li>ES6</li><li>node.js基础</li><li>Webpack基础</li><li>Vue.js</li><li>React.js</li><li>Angular.js</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;css3&lt;/li&gt;
&lt;li&gt;html5&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;jQuery&lt;/li&gt;
&lt;li&gt;ajax&lt;/li&gt;
&lt;li&gt;json
    
    </summary>
    
      <category term="计划" scheme="http://setloser.github.io/categories/%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="-个人计划" scheme="http://setloser.github.io/tags/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>windows实用工具</title>
    <link href="http://setloser.github.io/2018/12/19/win-pro/"/>
    <id>http://setloser.github.io/2018/12/19/win-pro/</id>
    <published>2018-12-19T09:51:27.000Z</published>
    <updated>2018-12-23T16:44:32.159Z</updated>
    
    <content type="html"><![CDATA[<h3 id="快捷工具"><a href="#快捷工具" class="headerlink" title="快捷工具"></a>快捷工具</h3><ul><li>Wox <p><a href="http://www.wox.one/" target="_blank" rel="noopener">http://www.wox.one/</a></p></li><li>Everything <p><a href="https://www.voidtools.com/" target="_blank" rel="noopener">https://www.voidtools.com/</a></p></li><li>Listary <p><a href="https://www.listary.com/" target="_blank" rel="noopener">https://www.listary.com/</a></p><a id="more"></a><h3 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h3></li><li>vscode <p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p></li><li>vs2017 <p><a href="https://visualstudio.microsoft.com/zh-hans/vs/?rr=https%3A%2F%2Fwww.google.com%2F" target="_blank" rel="noopener">https://visualstudio.microsoft.com/zh-hans/vs/?rr=https%3A%2F%2Fwww.google.com%2F</a></p></li><li>webstorm <p><a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">https://www.jetbrains.com/webstorm/</a></p></li><li>postman <p><a href="https://www.getpostman.com/" target="_blank" rel="noopener">https://www.getpostman.com/</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;快捷工具&quot;&gt;&lt;a href=&quot;#快捷工具&quot; class=&quot;headerlink&quot; title=&quot;快捷工具&quot;&gt;&lt;/a&gt;快捷工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Wox &lt;p&gt;&lt;a href=&quot;http://www.wox.one/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.wox.one/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Everything &lt;p&gt;&lt;a href=&quot;https://www.voidtools.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.voidtools.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Listary &lt;p&gt;&lt;a href=&quot;https://www.listary.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.listary.com/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="实用工具" scheme="http://setloser.github.io/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="日常工具" scheme="http://setloser.github.io/tags/%E6%97%A5%E5%B8%B8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Html基础</title>
    <link href="http://setloser.github.io/2018/11/27/html/"/>
    <id>http://setloser.github.io/2018/11/27/html/</id>
    <published>2018-11-27T07:14:42.000Z</published>
    <updated>2018-12-07T11:39:29.198Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h2><h3 id="HTML5声名"><a href="#HTML5声名" class="headerlink" title="HTML5声名"></a>HTML5声名</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;/html&gt;</code></pre><h3 id="HTML文档可见标签"><a href="#HTML文档可见标签" class="headerlink" title="HTML文档可见标签"></a>HTML文档可见标签</h3><pre><code>&lt;body&gt;&lt;/body&gt;</code></pre><a id="more"></a><h3 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&lt;/h1&gt;一级标题</span><br><span class="line">&lt;h2&gt;&lt;/h2&gt;二级标题</span><br><span class="line">&lt;h3&gt;&lt;/h3&gt;三级标题</span><br><span class="line">&lt;h4&gt;&lt;/h4&gt;四级标题</span><br><span class="line">&lt;h5&gt;&lt;/h5&gt;五级标题</span><br><span class="line">&lt;h6&gt;&lt;/h6&gt;六级标题</span><br></pre></td></tr></table></figure><h3 id="HTML段落"><a href="#HTML段落" class="headerlink" title="HTML段落"></a>HTML段落</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;/p&gt;使用该标签换行</span><br></pre></td></tr></table></figure><h3 id="HTML链接"><a href="#HTML链接" class="headerlink" title="HTML链接"></a>HTML链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.setloser.com&quot;&gt;梦舞银雪的博客&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="HTML图像"><a href="#HTML图像" class="headerlink" title="HTML图像"></a>HTML图像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;w3schools.jpg&quot; alt=&quot;W3Schools.com&quot; width=&quot;104&quot; height=&quot;142&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="HTML按钮"><a href="#HTML按钮" class="headerlink" title="HTML按钮"></a>HTML按钮</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button&gt;&lt;/button&gt;按钮标签</span><br><span class="line">（不常用一般以其余标签模拟如：input/a/span等标签居多）</span><br></pre></td></tr></table></figure><h3 id="HTML列表"><a href="#HTML列表" class="headerlink" title="HTML列表"></a>HTML列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">无序列表:</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;&lt;?li&gt;</span><br><span class="line">&lt;/ul&gt;、</span><br><span class="line">有序列表:</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><h2 id="HTML元素"><a href="#HTML元素" class="headerlink" title="HTML元素"></a>HTML元素</h2><p>HTML标签有开始和结束标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;标记名&gt;内容放在这里...... &lt; /标记名&gt;</span><br></pre></td></tr></table></figure></p><p>完整的HTML实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;完整的HTML实例h1&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;完整的HTML实例p&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p><strong>注意：</strong>一些HTML元素将正确显示，即使你忘记了结束标签</p><h3 id="HTML换行标签"><a href="#HTML换行标签" class="headerlink" title="HTML换行标签"></a>HTML换行标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt;是一个没有结束标记（在一个空元素&lt;br&gt;标签定义换行）。</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>HTML5不需要空元素被关闭。但是如果你想严格的验证，或者如果你需要让你的文档通过读取XML解析器，你必须正确地关闭所有的HTML元素。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML基础&quot;&gt;&lt;a href=&quot;#HTML基础&quot; class=&quot;headerlink&quot; title=&quot;HTML基础&quot;&gt;&lt;/a&gt;HTML基础&lt;/h2&gt;&lt;h3 id=&quot;HTML5声名&quot;&gt;&lt;a href=&quot;#HTML5声名&quot; class=&quot;headerlink&quot; title=&quot;HTML5声名&quot;&gt;&lt;/a&gt;HTML5声名&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;HTML文档可见标签&quot;&gt;&lt;a href=&quot;#HTML文档可见标签&quot; class=&quot;headerlink&quot; title=&quot;HTML文档可见标签&quot;&gt;&lt;/a&gt;HTML文档可见标签&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Web基础" scheme="http://setloser.github.io/categories/Web%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Web前端" scheme="http://setloser.github.io/tags/Web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Git语法</title>
    <link href="http://setloser.github.io/2018/11/03/git-pro/"/>
    <id>http://setloser.github.io/2018/11/03/git-pro/</id>
    <published>2018-11-03T07:24:54.000Z</published>
    <updated>2018-12-07T11:38:17.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git基础语法命令"><a href="#Git基础语法命令" class="headerlink" title="Git基础语法命令"></a>Git基础语法命令</h2><pre><code>git init                                                  # 初始化本地git仓库（创建新仓库）git config --global user.name &quot;xxx&quot;                       # 配置用户名git config --global user.email &quot;xxx@xxx.com&quot;              # 配置邮件git config --global color.ui true                         # git status等命令自动着色</code></pre><a id="more"></a><pre><code>git config --global color.status autogit config --global color.diff autogit config --global color.branch autogit config --global color.interactive autogit config --global --unset http.proxy                    # remove  proxy configuration on gitgit clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库git status                                                # 查看当前版本状态（是否修改）git add xyz                                               # 添加xyz文件至indexgit add .                                                 # 增加当前子目录下所有更改过的文件至indexgit commit -m &apos;xxx&apos;                                       # 提交git commit --amend -m &apos;xxx&apos;                               # 合并上一次提交（用于反复修改）git commit -am &apos;xxx&apos;                                      # 将add和commit合为一步git rm xxx                                                # 删除index中的文件git rm -r *                                               # 递归删除git log                                                   # 显示提交日志git log -1                                                # 显示1行日志 -n为n行git log -5git log --stat                                            # 显示提交日志及相关变动文件git log -p -mgit show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容git show dfb02                                            # 可只用commitid的前几位git show HEAD                                             # 显示HEAD提交日志git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本git tag                                                   # 显示已存在的taggit tag -a v2.0 -m &apos;xxx&apos;                                  # 增加v2.0的taggit show v2.0                                             # 显示v2.0的日志及详细内容git log v2.0                                              # 显示v2.0的日志git diff                                                  # 显示所有未添加至index的变更git diff --cached                                         # 显示所有已添加index但还未commit的变更git diff HEAD^                                            # 比较与上一个版本的差异git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）git branch                                                # 显示本地分支git branch --contains 50089                               # 显示包含提交50089的分支git branch -a                                             # 显示所有分支git branch -r                                             # 显示所有原创分支git branch --merged                                       # 显示所有已合并到当前分支的分支git branch --no-merged                                    # 显示所有未合并到当前分支的分支git branch -m master master_copy                          # 本地分支改名git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出git checkout -b master master_copy                        # 上面的完整版git checkout features/performance                         # 检出已存在的features/performance分支git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支git checkout v2.0                                         # 检出版本v2.0git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）git merge origin/master                                   # 合并远程master分支至当前分支git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改git push origin master                                    # 将当前分支push到远程master分支git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支git push --tags                                           # 把所有tag推送到远程仓库git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支git pull origin master                                    # 获取远程分支master并merge到当前分支git mv README README2                                     # 重命名文件README为README2git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）git rebasegit branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933git ls-files                                              # 列出git index包含的文件git show-branch                                           # 图示当前分支历史git show-branch --all                                     # 图示所有分支历史git whatchanged                                           # 显示提交历史对应的文件修改git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818git ls-tree HEAD                                          # 内部命令：显示某个git对象git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASHgit reflog                                                # 显示所有提交，包括孤立节点git show HEAD@{5}git show master@{yesterday}                               # 显示master分支昨天的状态git log --pretty=format:&apos;%h %s&apos; --graph                   # 图示提交日志git show HEAD~3git show -s --pretty=raw 2be7fcb476git stash                                                 # 暂存当前修改，将所有至为HEAD状态git stash list                                            # 查看所有暂存git stash show -p stash@{0}                               # 参考第一次暂存git stash apply stash@{0}                                 # 应用第一次暂存git grep &quot;delete from&quot;                                    # 文件中搜索文本“delete from”git grep -e &apos;#define&apos; --and -e SORT_DIRENTgit gcgit fsck</code></pre><center> 原文来自：<a href="https://gist.github.com/guweigang/9848271" target="_blank" rel="noopener">GithubGist</a></center>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git基础语法命令&quot;&gt;&lt;a href=&quot;#Git基础语法命令&quot; class=&quot;headerlink&quot; title=&quot;Git基础语法命令&quot;&gt;&lt;/a&gt;Git基础语法命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;git init                                                  
# 初始化本地git仓库（创建新仓库）
git config --global user.name &amp;quot;xxx&amp;quot;                       
# 配置用户名
git config --global user.email &amp;quot;xxx@xxx.com&amp;quot;              
# 配置邮件
git config --global color.ui true                         
# git status等命令自动着色
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Web基础" scheme="http://setloser.github.io/categories/Web%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Git" scheme="http://setloser.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo个人博客的搭建</title>
    <link href="http://setloser.github.io/2018/10/30/hexo-set/"/>
    <id>http://setloser.github.io/2018/10/30/hexo-set/</id>
    <published>2018-10-30T12:38:31.000Z</published>
    <updated>2018-12-07T11:38:25.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo的搭建"><a href="#Hexo的搭建" class="headerlink" title="Hexo的搭建"></a>Hexo的搭建</h1><p>  &emsp;&emsp;在很早之前我就想搭建一个自己的博客，以前看过一些博客搭建的博文之类的。有些博客的搭建方式很复杂，当然也是对于我这样的小白而言。之后慢慢接触到github，也是因为开发需要和方便快捷的项目备份。前两天看到github上面搭建博客一个非常方便的方式<strong>GitHub Pages</strong>搭建博客。<br>  <a id="more"></a><br>  &emsp;&emsp;于是乎，本人就在网上查阅资料看到一个很方便快捷的方案，git+hexo+node.js搭建博客。而且hexo在官网提供了很多的主题可以供自己选择，这些主题模板不止有博客的还有展示模板和相册模板。几天前看到一个比较炫酷的博客<a href="https://cry101.github.io/" target="_blank" rel="noopener">若晓的博客</a>,这篇博文的主人若晓就是使用这种方案搭建的。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ol><li>node.js</li><li>git</li><li>VScode+Markdown插件<br><strong>环境准备之前你应该取github官网注册一个账号。</strong></li></ol><p>后续跟新……</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo的搭建&quot;&gt;&lt;a href=&quot;#Hexo的搭建&quot; class=&quot;headerlink&quot; title=&quot;Hexo的搭建&quot;&gt;&lt;/a&gt;Hexo的搭建&lt;/h1&gt;&lt;p&gt;  &amp;emsp;&amp;emsp;在很早之前我就想搭建一个自己的博客，以前看过一些博客搭建的博文之类的。有些博客的搭建方式很复杂，当然也是对于我这样的小白而言。之后慢慢接触到github，也是因为开发需要和方便快捷的项目备份。前两天看到github上面搭建博客一个非常方便的方式&lt;strong&gt;GitHub Pages&lt;/strong&gt;搭建博客。&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://setloser.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Git" scheme="http://setloser.github.io/tags/Git/"/>
    
      <category term="Hexo" scheme="http://setloser.github.io/tags/Hexo/"/>
    
      <category term="个人博客" scheme="http://setloser.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>MD语法</title>
    <link href="http://setloser.github.io/2018/10/30/markdown_pro/"/>
    <id>http://setloser.github.io/2018/10/30/markdown_pro/</id>
    <published>2018-10-29T16:54:24.000Z</published>
    <updated>2018-12-07T11:39:15.143Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h3><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题一级标题===================二级标题--------------------</code></pre><a id="more"></a><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用星号<code>（）</code>和底线<code>（_）</code>作为标记强调字词的符号，被 或 包围的字词会被转成用 <code>&lt;em&gt;</code>标签包围，用两个<code>*</code> 或 包起来的话，则会被转成 <code>&lt;strong&gt;</code>, 例如：<br>    一个强调字符, 即斜体, 可用 <em>asterisks</em> 或 <em>underscores</em>.</p><pre><code>两个强调字符, 即粗体, 可用 **asterisks** 或 __underscores__.也可以组合使用, 可用 **asterisks and _underscores_**.而想展现删除线, 可用两条波浪线. ~~Scratch this.~~</code></pre><h3 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h3><pre><code>要在 Markdown 中建立代码区块很简单，有两种方法：第一种，只要简单地缩进 4 个空格或是 1 个制表符就可以.第二种，在代码段落的头部和尾部用包围起来（更建议用这种方式）。</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre><code>一个惊叹号『!』接着一个方括号，里面是图片的替代文字接着一个普通括号，里面是图片的网址，最后还可以用引号包住并加上 选择性的『title’』文字。行内式(外链)的图片语法看起来像是：![Alt text](/path/to/img.jpg)或![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></pre><p>详细叙述如下：<br>    1.一个惊叹号 !<br>    2.接着一个方括号，里面放上图片的替代文字<br>    3.接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。<br><strong>到目前为止，Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的标签。</strong></p><h3 id="表格示例"><a href="#表格示例" class="headerlink" title="表格示例"></a>表格示例</h3><pre><code>| Tables        | Are           | Cool  || ------------- |:-------------:| -----:|| col 3 is      | right-aligned | $1600 || col 2 is      | centered      |   $12 || zebra stripes | are neat      |    $1 |第一行为定义表格头部标题，而第二行是区分头部和设置对齐方式, 减号(-)至少有3个.  表格外围的管道的可选的, 也不需要让每行的每个TD的管道对齐.  最简单的写法也可以像下面那样，但是看代码就没上面的那么好看了，尽管最后的显示效果都一样.  在减号的两侧定义冒号&quot;:&quot; 可设置该竖行的对齐方式, 左边加等于左对齐，两边都加等于居中对齐.Markdown | Less | Pretty--- | --- | ---*Still* | `renders` | **nicely**1 | 2 | 3</code></pre><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><table><thead><tr><th>Markdown</th><th>Less</th><th>Pretty</th></tr></thead><tbody><tr><td><em>Still</em></td><td><code>renders</code></td><td><strong>nicely</strong></td></tr><tr><td>1</td><td>2</td><td>3</td></tr></tbody></table><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p><a href="http://setloser.github.io">梦舞银雪的博客</a></p><pre><code>[梦舞银雪的博客](http://setloser.github.io)</code></pre><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><pre><code>这是分隔线上部分内容---这是分隔线下部分内容</code></pre><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>Markdown 编辑器已支持绘制流程图、时序图和甘特图。通过 mermaid 实现图形的插入，<br>点击查看<a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">语法详情</a>。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><pre><code>- Red- Green- Blue</code></pre><ul><li>Red</li><li>Green</li><li>Blue</li></ul><center> 参考来自：<a href="https://coding.net/help/doc/project/markdown.html" target="_blank" rel="noopener">CODIN Markdown 语法介绍</a></center><br><center><strong>首次博文,不足之处多多包涵</strong></center>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;标题语法&quot;&gt;&lt;a href=&quot;#标题语法&quot; class=&quot;headerlink&quot; title=&quot;标题语法&quot;&gt;&lt;/a&gt;标题语法&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
一级标题
===================
二级标题
--------------------
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Web基础" scheme="http://setloser.github.io/categories/Web%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="语法" scheme="http://setloser.github.io/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
</feed>
